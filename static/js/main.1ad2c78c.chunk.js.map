{"version":3,"sources":["components/Layout/index.jsx","components/Button/index.jsx","components/FileInput/index.jsx","components/RadioGroup/index.jsx","components/Loader.jsx","routes/Home/index.jsx","routes/Error/index.jsx","App.jsx","index.jsx"],"names":["Layout","children","Button","className","onClick","cssClass","role","FileInput","onChange","type","id","htmlFor","title","RadioGroup","data","state","map","item","name","value","defaultChecked","Loader","size","color","xmlns","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","Home","document","useState","file","setFile","uploading","setUploading","uploaded","setUploaded","error","setError","engines","url","engine","setEngine","videoTypes","upload","headers","Headers","append","formdata","FormData","find","i","fetch","method","body","then","response","json","success","link","Error","search","catch","fileUrl","window","open","focus","e","target","files","filter","NotFound","to","App","path","exact","component","status","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.1ad2c78c.chunk.js","sourcesContent":["import './style.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import './style.css';\r\n\r\nconst Button = ({ className, onClick, children }) => {\r\n  const cssClass = className ? ` ${className}` : ' main'\r\n\r\n  const click = () => {\r\n    onClick && onClick()\r\n  }\r\n\r\n  return (\r\n    <div onClick={click} className={'btn' + cssClass} role=\"button\">\r\n      {children || 'Click'}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import { Fragment } from 'react';\r\nimport Button from 'components/Button';\r\nimport './style.css';\r\n\r\nconst FileInput = ({ onChange, children }) => {\r\n  return (\r\n    <Fragment>\r\n      <input type=\"file\" onChange={onChange} id=\"fileInput\" className=\"none\" />\r\n      <label htmlFor=\"fileInput\" className=\"file_input\" title=\"Upload file\">\r\n        <Button>Choose</Button>\r\n        <span>\r\n          {children || 'File not selected'}\r\n        </span>\r\n      </label>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FileInput;\r\n","import './style.css';\r\n\r\nconst RadioGroup = ({ data, state, onChange }) => {\r\n  return (\r\n    <form onChange={onChange} className=\"radio_group\">\r\n      {data.map(item => (\r\n        <div className=\"radio_item\" key={item.id}>\r\n          <input id={'engine_' + item.id} type=\"radio\" name=\"engine\" value={item.id} defaultChecked={state.id === item.id} />\r\n          <label htmlFor={'engine_' + item.id}>{item.name}</label>\r\n        </div>\r\n      ))}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RadioGroup;\r\n","const Loader = ({ size = '24', color = '#fff' }) => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke={color} strokeWidth=\"10\" r=\"35\" strokeDasharray=\"164.93361431346415 56.97787143782138\" transform=\"rotate(359.289 50.0009 50.0009)\">\r\n          <animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.2s\" begin=\"0s\" repeatCount=\"indefinite\" />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;\r\n","import { useState } from 'react';\r\nimport Layout from 'components/Layout';\r\nimport FileInput from 'components/FileInput';\r\nimport RadioGroup from 'components/RadioGroup';\r\nimport Button from 'components/Button';\r\nimport Loader from 'components/Loader';\r\n// import { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\r\nimport './style.css';\r\n\r\nconst Home = () => {\r\n  document.title = 'Image Search'\r\n\r\n  const [file, setFile] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n  const [uploaded, setUploaded] = useState('')\r\n  const [error, setError] = useState('')\r\n\r\n  const engines = [{\r\n    id: 1,\r\n    name: 'Google',\r\n    url: 'https://www.google.com/searchbyimage?image_url='\r\n  }, {\r\n    id: 2,\r\n    name: 'Yandex',\r\n    url: 'https://yandex.com/images/search?rpt=imageview&url='\r\n  }]\r\n  const [engine, setEngine] = useState(engines[0])\r\n\r\n  const apiUrl = 'https://api.imgur.com/3/image'\r\n  const clientId = 'f1f9224726db6dd'\r\n\r\n  // const ffmpeg = createFFmpeg({ log: true })\r\n  const videoTypes = ['video/mp4', 'video/webm']\r\n\r\n  const chooseHandler = (e) => {\r\n    error && setError('')\r\n    setUploaded('')\r\n    setFile(e.target.files?.item(0))\r\n  }\r\n\r\n  const uploadClick = () => {\r\n    if (file) {\r\n      setUploading(true)\r\n      upload(file)\r\n      // !videoTypes.find(i => i === file.type) ? upload(file) : convertToImage(file)\r\n    } else {\r\n      setUploading(false)\r\n      setError('Select a file!')\r\n    }\r\n  }\r\n\r\n  const searchClick = () => {\r\n    search(uploaded)\r\n  }\r\n\r\n  const engineHandler = ({ target }) => {\r\n    setEngine(engines.filter(i => i.id === target.value * 1 )[0])\r\n  }\r\n\r\n  const upload = (file) => {\r\n    const headers = new Headers()\r\n    headers.append('Authorization', 'Client-ID ' + clientId)\r\n\r\n    const formdata = new FormData()\r\n    if (videoTypes.find(i => i === file.type)) {\r\n      setError('Error. Allowed only images')\r\n      setUploading(false)\r\n      setUploaded('')\r\n      setFile(null)\r\n      return\r\n    } else {\r\n      formdata.append('image', file)\r\n    }\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers,\r\n      body: formdata\r\n    }\r\n\r\n    fetch(apiUrl, options)\r\n      .then(response => response.json())\r\n      .then(({ data, success }) => {\r\n        if (!success && !data.link) throw Error\r\n\r\n        setUploading(false)\r\n        setUploaded(data.link)\r\n\r\n        search(data.link)\r\n      })\r\n      .catch(error => {\r\n        setError('Error. File not uploaded')\r\n        setUploading(false)\r\n        setUploaded('')\r\n        setFile(null)\r\n      })\r\n  }\r\n\r\n  // const convertToImage = async (file) => {\r\n  //   await ffmpeg.load()\r\n  //   ffmpeg.FS('writeFile', 'video.mp4', await fetchFile(file))\r\n  //   await ffmpeg.run('-i', 'video.mp4', '-ss', '00:00:01.000', '-vframes', '1', '-f', 'jpeg', 'image.jpg')\r\n  //   const data = ffmpeg.FS('readFile', 'image.jpg')\r\n  //   const url = URL.createObjectURL(new Blob([data.buffer], { type: 'image/jpeg' }))\r\n  //   upload(url)\r\n  // }\r\n\r\n  const search = (fileUrl) => {\r\n    const win = window.open(engine.url + fileUrl, '_blank')\r\n    win.focus()\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <FileInput onChange={chooseHandler}>\r\n        {!error\r\n          ? file ? file.name : 'Select an image'\r\n          : error\r\n        }\r\n      </FileInput>\r\n\r\n      <RadioGroup data={engines} state={engine} onChange={engineHandler} />\r\n\r\n      {!uploaded\r\n        ? <Button onClick={uploadClick}>{uploading ? <Loader /> : 'Upload and find'}</Button>\r\n        : <Button onClick={searchClick}>Find</Button>\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport const NotFound = () => {\r\n  document.title = '404 Not Found'\r\n\r\n  return (\r\n    <div>\r\n      <h2>404 Not Found</h2>\r\n      <div>\r\n        <Link to=\"/\">Go home</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from 'routes/Home';\nimport { NotFound } from 'routes/Error';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/Image-Search\" exact component={Home} />\n        <Route component={NotFound} status={404} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}